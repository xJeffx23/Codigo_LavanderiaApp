// <auto-generated />
using System;
using LavanderiaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LavanderiaApp.Migrations
{
    [DbContext(typeof(LavanderiaContext))]
    [Migration("20240628213533_Migracion1")]
    partial class Migracion1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LavanderiaApp.Models.Cliente", b =>
                {
                    b.Property<int>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cedula"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("LavanderiaApp.Models.EstadoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstadosServicio");
                });

            modelBuilder.Entity("LavanderiaApp.Models.Prenda", b =>
                {
                    b.Property<int>("IdPrenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrenda"));

                    b.Property<int>("CedulaPropietario")
                        .HasColumnType("int");

                    b.Property<string>("EspecificacionesLavado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPrendaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTelaId")
                        .HasColumnType("int");

                    b.HasKey("IdPrenda");

                    b.HasIndex("CedulaPropietario");

                    b.HasIndex("TipoPrendaId");

                    b.HasIndex("TipoTelaId");

                    b.ToTable("Prendas");
                });

            modelBuilder.Entity("LavanderiaApp.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PrendaIdPrenda")
                        .HasColumnType("int");

                    b.Property<string>("cedulaPropietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estadoServicioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaRecibo")
                        .HasColumnType("datetime2");

                    b.Property<string>("prendaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrendaIdPrenda");

                    b.HasIndex("estadoServicioId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("LavanderiaApp.Models.TipoPrenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPrenda");
                });

            modelBuilder.Entity("LavanderiaApp.Models.TipoTela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposTela");
                });

            modelBuilder.Entity("LavanderiaApp.Models.Prenda", b =>
                {
                    b.HasOne("LavanderiaApp.Models.Cliente", "Propietario")
                        .WithMany()
                        .HasForeignKey("CedulaPropietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LavanderiaApp.Models.TipoPrenda", "TipoPrenda")
                        .WithMany()
                        .HasForeignKey("TipoPrendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LavanderiaApp.Models.TipoTela", "TipoTela")
                        .WithMany()
                        .HasForeignKey("TipoTelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propietario");

                    b.Navigation("TipoPrenda");

                    b.Navigation("TipoTela");
                });

            modelBuilder.Entity("LavanderiaApp.Models.Servicio", b =>
                {
                    b.HasOne("LavanderiaApp.Models.Prenda", "Prenda")
                        .WithMany()
                        .HasForeignKey("PrendaIdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LavanderiaApp.Models.EstadoServicio", "EstadoServicio")
                        .WithMany()
                        .HasForeignKey("estadoServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoServicio");

                    b.Navigation("Prenda");
                });
#pragma warning restore 612, 618
        }
    }
}
